{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","timer","Date","timerId","setInterval","this","setState","prevProps","name","props","console","log","clearInterval","toLocaleTimeString","React","Component","App","isClockVisible","className","type","onClick","Math","random","ReactDOM","render","document","getElementById"],"mappings":"sNAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAyBC,aAAY,cAAU,KALjD,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aAAY,WACzB,EAAKE,SAAS,CAAEL,MAAO,IAAIC,SAC1B,OAVP,gCAaE,SAAmBK,GACbA,EAAUC,OAASH,KAAKI,MAAMD,MAChCE,QAAQC,IAAR,qCAA0CJ,EAAUC,KAApD,eAA+DH,KAAKI,MAAMD,OAG5EE,QAAQC,IAAIN,KAAKL,MAAMC,SAlB3B,kCAqBE,WACEW,cAAcP,KAAKF,WAtBvB,oBAyBE,WACE,OACE,wCACME,KAAKL,MAAMC,MAAMY,4BA5B7B,GAA2BC,IAAMC,WCC3BC,E,4MACJhB,MAAQ,CACNiB,gBAAgB,EAChBT,KAAM,G,4CAGR,WAAU,IAAD,OACP,OACE,sBAAKU,UAAU,MAAf,UACE,6CACA,8CAEG,IACAb,KAAKL,MAAMiB,gBACP,cAAC,EAAD,CAAOT,KAAMH,KAAKL,MAAMQ,OAC7B,gCACE,wBACEW,KAAK,SACLC,QAAS,kBAAM,EAAKd,SAAS,CAAEW,gBAAgB,KAFjD,wBAMA,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKd,SAAS,CAAEW,gBAAgB,KAFjD,wBAMA,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKd,SAAS,CAAEE,KAAMa,KAAKC,YAF5C,4C,GA5BMR,IAAMC,WAgDTC,ICjDfO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ea5ebffa.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    timer: new Date(),\n  };\n\n  timerId:NodeJS.Timeout = setInterval(() => {}, 1000);\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ timer: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps:Props) {\n    if (prevProps.name !== this.props.name) {\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n\n    console.log(this.state.timer);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div>\n        {`${this.state.timer.toLocaleTimeString()}`}\n      </div>\n    );\n  }\n}\n\ntype Props = {\n  name: number\n};\ntype State = {\n  timer: Date\n};\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: true,\n    name: 7,\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible\n            && <Clock name={this.state.name} />}\n          <div>\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ isClockVisible: true })}\n            >\n              Show clock\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ isClockVisible: false })}\n            >\n              Hide clock\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ name: Math.random() })}\n            >\n              Set a random name\n            </button>\n          </div>\n        </p>\n      </div>\n    );\n  }\n}\n\ntype State = {\n  isClockVisible: boolean,\n  name: number\n};\n\ntype Props = {};\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}