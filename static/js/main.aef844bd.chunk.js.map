{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","timer","Date","timerId","this","setInterval","setState","prevProps","name","props","console","log","clearInterval","toLocaleTimeString","React","Component","App","isClockVisible","changeVisible","toDo","changeName","Math","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEL,MAAO,IAAIC,SAC1B,OAVP,gCAaE,SAAmBK,GACbA,EAAUC,OAASJ,KAAKK,MAAMD,MAChCE,QAAQC,IAAR,qCAA0CJ,EAAUC,KAApD,eAA+DJ,KAAKK,MAAMD,OAG5EE,QAAQC,IAAIP,KAAKJ,MAAMC,SAlB3B,kCAqBE,WACMG,KAAKD,SACPS,cAAcR,KAAKD,WAvBzB,oBA2BE,WACE,OACE,wCACMC,KAAKJ,MAAMC,MAAMY,4BA9B7B,GAA2BC,IAAMC,WCC3BC,E,4MACJhB,MAAQ,CACNiB,gBAAgB,EAChBT,KAAM,G,EAGRU,cAAgB,SAACC,GACf,MAAgB,SAATA,EACH,kBAAM,EAAKb,SAAS,CAAEW,gBAAgB,KACtC,kBAAM,EAAKX,SAAS,CAAEW,gBAAgB,M,EAG5CG,WAAa,kBAAM,EAAKd,SAAS,CAAEE,KAAMa,KAAKC,Y,4CAE9C,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,8CAEG,IACAnB,KAAKJ,MAAMiB,gBACP,cAAC,EAAD,CAAOT,KAAMJ,KAAKJ,MAAMQ,OAC7B,gCACE,wBACEgB,KAAK,SACLC,QAASrB,KAAKc,cAAc,QAF9B,wBAMA,wBACEM,KAAK,SACLC,QAASrB,KAAKc,cAAc,QAF9B,wBAMA,wBACEM,KAAK,SACLC,QAASrB,KAAKgB,WAFhB,4C,GApCMN,IAAMC,WAwDTC,ICzDfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aef844bd.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    timer: new Date(),\n  };\n\n  timerId?: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ timer: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n\n    console.log(this.state.timer);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {`${this.state.timer.toLocaleTimeString()}`}\n      </div>\n    );\n  }\n}\n\ntype Props = {\n  name: number\n};\ntype State = {\n  timer: Date\n};\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: true,\n    name: 7,\n  };\n\n  changeVisible = (toDo:string) => {\n    return toDo === 'show'\n      ? () => this.setState({ isClockVisible: true })\n      : () => this.setState({ isClockVisible: false });\n  };\n\n  changeName = () => this.setState({ name: Math.random() });\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible\n            && <Clock name={this.state.name} />}\n          <div>\n            <button\n              type=\"button\"\n              onClick={this.changeVisible('show')}\n            >\n              Show clock\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.changeVisible('hide')}\n            >\n              Hide clock\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.changeName}\n            >\n              Set a random name\n            </button>\n          </div>\n        </p>\n      </div>\n    );\n  }\n}\n\ntype State = {\n  isClockVisible: boolean,\n  name: number\n};\n\ntype Props = {};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}